---
import Mainlayout from "../components/layouts/Mainlayout.astro";
import GalleryCards from "../components/GalleryCards.astro";
import "../styles/style.css";

const data = await fetch("https://kzwdodzkuyregkxdogsp.supabase.co/rest/v1/SusseVolander_Gallery", {
  method: "GET",
  headers: {
    apikey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt6d2RvZHprdXlyZWdreGRvZ3NwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTYyMzQ3NjEsImV4cCI6MjAzMTgxMDc2MX0.G7BAKl7YMqVe8k0n5d8nABx91EvQpBZLI7mtu9KMVuI",
  },
}).then((res) => res.json());
console.log(data);
---

<Mainlayout title="Galleri">
  <main>
    <article class="intro">
      <img class="gallery_title_img" src="/gallery/gallery_head.webp" alt="Susses signature" width="768" height="291.84" />
      <div class="intro_gallery">
        <h1 class="gallery_title">Galleri</h1>
        <p class="gallery_intro_tekst">Velkommen til mit galleri! Her mødes farver og glæde i en festlig symfoni af kreativitet. Udforsk mine malerier, der emmer af livlige kompositioner og sprudlende energi. Tag med på en rejse gennem mit kunstneriske univers og lad dig inspirere af mine levende værker!</p>
      </div>
    </article>

    <section class="main_wrapper">
      <article class="catalog_items">
        {
          data.map((show, galleri) => {
            const className = `item_${(galleri % 3) + 1} slide-in`;
            return (
              <div class={className}>
                <GalleryCards data={show} />
              </div>
            );
          })
        }
      </article>
    </section>
  </main>
</Mainlayout>
<style>
  /***********************************************mobil*/

  .intro {
    display: grid;
    place-items: center;
    position: relative;
  }
  .gallery_title_img {
    width: 200%;
  }
  .intro_gallery {
    display: flex;
    position: absolute;
    flex-flow: column wrap;
    width: 100%;
    top: 43%;
    left: 2%;
    margin: 0 0;
    padding: 10px 20px;
    transform: translate(-2%, -50%);
    object-fit: cover;
    animation: fade-out linear;
    animation-timeline: view();
    animation-range: exit -200px;
  }

  @keyframes fade-out {
    to {
      opacity: 0;
    }
  }

  .gallery_title,
  .gallery_intro_tekst {
    color: #fcfff6;
    padding: 0px;
  }
  .gallery_title {
    font-size: 30px;
  }
  .gallery_intro_tekst {
    font-size: 16px;
    margin-top: 10px;
  }
  .main_wrapper {
    padding: 50px 20px;
    overflow: hidden;
    position: relative;
    margin-bottom: 50px;
  }

  .item_1 {
    transform: translateX(-50%);
  }
  .item_2 {
    transform: translateY(6%);
  }
  .item_3 {
    transform: translateX(50%);
  }
  .item_1.appear {
    transform: translate(0, 0);
    opacity: 1;
  }
  .item_2.appear {
    transform: translateY(0);
    opacity: 1;
  }
  .item_3.appear {
    transform: translate(0, 0);
    opacity: 1;
  }
  .item_1,
  .item_2,
  .item_3 {
    transition:
      opacity 250ms ease-in,
      transform 400ms ease-in;
    opacity: 0;
  }

  @media (min-width: 425px) {
    .catalog_items {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
    }
    .intro_gallery {
      width: 82%;
    }
    .gallery_title_img {
      width: 140%;
    }
  }
  @media (min-width: 500px) {
    .intro_gallery {
      left: 7%;
      width: 69%;
    }
  }
  /**************************************************Tablet*/
  @media (min-width: 760px) {
    .gallery_title_img {
      width: 100%;
    }
    .catalog_items {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 20px;
    }
    .item_1 {
      transform: translateX(-50%);
    }
    .item_2 {
      transform: translateY(6%);
    }
    .item_3 {
      transform: translateX(50%);
    }
    .item_1.appear {
      transform: translate(0, -15%);
      opacity: 1;
    }
    .item_2.appear {
      transform: translateY(0);
      opacity: 1;
    }
    .item_3.appear {
      transform: translate(0, -10%);
      opacity: 1;
    }
    .item_1,
    .item_2,
    .item_3 {
      transition:
        opacity 250ms ease-in,
        transform 400ms ease-in;
      opacity: 0;
    }
    .intro_gallery {
      width: 59%;
      left: 7%;
    }
    .gallery_title {
      font-size: 50px;
    }
    ..gallery_intro_tekst {
      font-size: 18px;
    }
  }
  /***********************************************Laptop */
  @media (min-width: 1024px) {
    .catalog_items {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      justify-items: center;
      align-items: center;
      gap: 80px;
      padding-top: 50px;
    }
    .intro_gallery {
      width: 55%;
      top: 35%;
      padding: 0;
    }

    .main_wrapper {
      margin: 0 100px;
      margin-bottom: 0px;
    }
    .gallery_title {
      font-size: 60px;
    }
    .gallery_intro_tekst {
      font-size: 18px;
    }
  }
  @media (min-width: 1440px) {
    .intro_gallery {
      width: 40%;
      left: 7%;
      padding: 0;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const faders = document.querySelectorAll(".catalog_items img");
    const sliders = document.querySelectorAll(".slide-in");

    const appearOptions = {
      threshold: 0, // 요소가 50% 뷰포트에 나타날 때 트리거
      rootMargin: "0px 0px -250px 0px",
    };

    const appearOnScroll = new IntersectionObserver(function (entries, appearOnScroll) {
      entries.forEach((entry) => {
        if (!entry.isIntersecting) {
          return;
        } else {
          entry.target.classList.add("appear");
          appearOnScroll.unobserve(entry.target); // 요소가 나타난 후 옵저버 해제
        }
      });
    }, appearOptions); // 여기서 `options` 대신 `appearOptions` 사용

    faders.forEach((fader) => {
      appearOnScroll.observe(fader);
    });
    sliders.forEach((slider) => {
      appearOnScroll.observe(slider);
    });
  });
</script>
